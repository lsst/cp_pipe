datastore:
  cached:
    # Explicit location of a cache directory root that can be shared
    # between multiple Butler instantiations. Without this the Butler
    # will use a new temporary location each time.
    # Instantiating a Butler from another Butler could propagate temporary
    # location. This can be left out or null used
    # to indicate a temporary directory.
    root: null
    expiry:
      # Expiry mode and associated threshold.
      # Options are:
      # - null (no expiry)
      # - disabled (no caching)
      # - files (threshold is number of files)
      # - datasets (threshold is number of datasets)
      # - size (threshold is size in bytes)
      # - age (threshold is oldest file in seconds)
      # Default for everyone is to limit the cache size to 4 datasets.
      mode: datasets
      threshold: 5000
    # Default cache value. This will be the default decision if no specific
    # match is found in the "cacheable" section later on.
    default: false

    # For the dataset types to target for caching, we consider the
    # pipetasks/clusters that have the largest numbers of butler put
    # operations.
    # For per-pipetask cache areas, caching is useful when
    #  * the input dataset types have dataset dimensions along
    #    the clustered dimensions,
    #  * the input dataset types have dimensions that can be transformed
    #    to clustered dimensions, e.g., detector -> patch
    #  * output datasets are passed directly to a downstream pipetask
    #    in the same cluster
    # Caching of dataset types that only have dimensions that overlap the
    # partition dimension of a cluster isn't needed.
    # Use a dict over list to simplify merging logic.
    cacheable:
      # Disable generic storage classes
      Exposure: false
      ExposureF: false

      bias: true
      dark: true
      flat: true
      bfk: true
      crosstalk: true
      cpSkyIsrExp: true
      cpSkyExpResidualBackground: true
      cpSkyMaskedIsrExp: true
