pipelineYaml: "${CP_PIPE_DIR}/pipelines/${INSTRUMENT}/cpIlluminationCorrection.yaml"

project: "${TICKET}"
campaign: "${TICKET}"
submitPath: "${SCRATCH}/submit/{outputRun}"

# Necessary to cluster by exposure if there are many input exposures
clusterAlgorithm: lsst.ctrl.bps.quantum_clustering_funcs.dimension_clustering
cluster:
  cpIlluminationCorrectionByDetector:
    pipetasks: cpIlluminationCorrectionIsr,cpIlluminationCorrectionCalibrateImage,cpIlluminationCorrectionTransformPreSourceTable
    dimensions: detector
    equalDimensions: visit:exposure
  cpIlluminationCorrectionByVisit:
    pipetasks: cpIlluminationCorrectionConsolidatePreSourceTable,cpIlluminationCorrectionConsolidateVisitSummary
    dimensions: visit

payload:
  payloadName: "${INSTRUMENT}_${TICKET}_illuminationCorrection"
  output: "${USER_CALIB_PREFIX}${INSTRUMENT}/calib/${TICKET}/${TAG}/illuminationCorrectionGen.${RERUN}"
  butlerConfig: "${REPO}"
  inCollection: "${RAW_COLLECTION},${CALIB_COLLECTIONS}"
  dataQuery: "${SELECTION_ILLUMINATION_CORRECTION}"

extraRunQuantumOptions: "--no-raise-on-partial-outputs"

pipetask:
  cpIlluminationCorrectionFgcmBuildFromIsolatedStars:
    requestMemory: 16384
  cpIlluminationCorrectionFgcmFitCycle:
    requestMemory: 131072
    requestCpus: 32
    extraRunQuantumOptions: "-j 1 -n 32"
