description: cp_pipe flat calibration for LSST isr task
tasks:
  cpFlatIsr:
    class: lsst.ip.isr.IsrTaskLSST
    config:
      connections.ccdExposure: "raw"
      connections.outputExposure: "cpFlatIsrExp"
      expectWcs: false
      doDefect: false
      doBias: true
      doDark: true
      doFlat: false
      doDiffNonLinearCorrection: false
      doBootstrap: false
      doDeferredCharge: false
      doLinearize: true
      doCorrectGains: false
      doApplyGains: true
      doVariance: true
      doSaturation: false
      doSuspect: false
      doCrosstalk: true
      crosstalk.doQuadraticCrosstalkCorrection: true
      doWidenSaturationTrails: false
      doInterpolate: false
      maskNegativeVariance: false
      doSetBadRegions: false
      doBrighterFatter: false
  cpFlatMeasure:
    class: lsst.cp.pipe.CpFlatMeasureTask
    config:
      connections.inputExp: "cpFlatIsrExp"
      connections.outputStats: "cpFlatStatistics"
  cpFlatNormalize:
    class: lsst.cp.pipe.CpFlatNormalizationTask
    config:
      connections.inputMDs: "cpFlatStatistics"
      connections.outputScales: "cpFlatNormalizeScales"
  cpFlatCombine:
    class: lsst.cp.pipe.CalibCombineByFilterTask
    config:
      connections.inputExpHandles: "cpFlatIsrExp"
      connections.inputScales: "cpFlatNormalizeScales"
      connections.outputData: "flat"
      calibrationType: "flat"
      exposureScaling: "InputList"
      scalingLevel: "DETECTOR"
contracts:
  - cpFlatIsr.doFlat == False
  - cpFlatIsr.doBootstrap == False
  - cpFlatCombine.calibrationType == "flat"
  - cpFlatCombine.exposureScaling == "InputList"
  - cpFlatMeasure.connections.inputExp == cpFlatIsr.connections.outputExposure
  - cpFlatNormalize.connections.inputMDs == cpFlatMeasure.connections.outputStats
  - cpFlatCombine.connections.inputExpHandles == cpFlatIsr.connections.outputExposure
  - cpFlatCombine.connections.inputScales == cpFlatNormalize.connections.outputScales
